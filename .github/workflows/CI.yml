name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions: read-all

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: get black version
        run: |
          export VERSION=$(grep -Po 'black==\K.*' requirements_dev.txt)
          echo "BLACK_VERSION=$VERSION" >> $GITHUB_ENV
      - name: run black
        uses: psf/black@stable
        with:
          version: ${{ env.BLACK_VERSION }}
          src: "./backend"

  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: .venv
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install project
        run: |
          cd backend
          poetry install --no-interaction

      - name: Test with pytest
        run: |
          cd backend
          ls
          python -m pytest